name: CD - Deploy Frontend

on:
  workflow_run:
    workflows: ["CI - Build and Push Frontend Image"]
    types: [completed]
    branches: ["main"]

jobs:
  deploy:
    runs-on: [self-hosted, Linux, X64]
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Ver contexto del cluster
        run: kubectl config current-context

      - name: Validar nodos
        run: kubectl get nodes -o wide

      # üî• PASO 1: ELIMINAR TODO (si existe)
      - name: Delete old resources
        run: |
          echo "üóëÔ∏è Eliminando recursos anteriores..."
          kubectl delete deployment frontend-seminario -n microservices --ignore-not-found=true
          kubectl delete pods -l app=frontend-seminario -n microservices --ignore-not-found=true
          echo "‚úÖ Limpieza completada"

      # ‚è≥ PASO 2: ESPERAR A QUE TODO SE LIMPIE
      - name: Wait for cleanup
        run: |
          echo "‚è≥ Esperando limpieza completa..."
          sleep 15
          
      # üöÄ PASO 3: APLICAR MANIFIESTOS FRESCOS
      - name: Apply fresh manifests
        run: |
          echo "üì¶ Aplicando manifiestos..."
          kubectl apply -f k8s/frontend/
          echo "‚úÖ Manifiestos aplicados"

      # ‚è≥ PASO 4: ESPERAR A QUE EL DEPLOYMENT EST√â LISTO
      - name: Wait for deployment to be ready
        run: |
          echo "‚è≥ Esperando a que el deployment est√© listo..."
          kubectl wait --for=condition=available --timeout=300s deployment/frontend-seminario -n microservices
          echo "‚úÖ Deployment listo"

      # ‚ÑπÔ∏è PASO 5: VERIFICAR EL ESTADO
      - name: Verify deployment
        run: |
          echo "üìä Estado del deployment:"
          kubectl get deployment frontend-seminario -n microservices
          echo ""
          echo "üì¶ Pods en ejecuci√≥n:"
          kubectl get pods -l app=frontend-seminario -n microservices
          echo ""
          echo "üñºÔ∏è Imagen actual:"
          kubectl get pods -l app=frontend-seminario -n microservices -o jsonpath='{.items[0].spec.containers[0].image}'
          echo ""